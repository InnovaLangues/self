{% macro displayMedia(questionnaire, media) %}
    {% import "InnovaSelfBundle:Editor:common/macros.html.twig" as macros %}
    {% set mediaType = media.mediaType.name %}
    {% if mediaType == "texte" %}
       {{ media.description | raw }}
    {% elseif mediaType == "image" %}
        <img src="{{ asset('upload/media/') ~ media.url }}" height="180px"/>
        <br/>
        <span class="btn btn-default btn-xs crop-open-modale" data-url="{{ asset('upload/media/') ~ media.url }}">crop</span>
    {% elseif mediaType == "video" %}
        <video id="video" controls class="vertical-middle" height="180px">
            <source src="{{ asset('upload/media/') ~ media.url }}" poster="{{ asset('bundles/innovaself/images/') ~ "video.png"}}" >
            Your browser does not support the video tag.
        </video>
        {{ macros.listeningLimit(questionnaire, media) }}
    {% elseif mediaType == "audio" %}
        <audio controls preload="auto" class="vertical-middle">
            <source src="{{ asset('upload/media/') ~ media.url }}" type="audio/mp3">
            Votre navigateur est trop ancien.
        </audio>
        {{ macros.listeningLimit(questionnaire, media) }}
    {% endif %}
{% endmacro %}

{% macro inputs(subquestion, proposition) %}
    {% if subquestion.typology.name == "QRU" or subquestion.typology.name == "TQRU" or subquestion.typology.name == "VF" or subquestion.typology.name == "VFNM" or subquestion.typology.name == "TVFNM" or subquestion.typology.name == "TVF" %}
        {% set type = "radio" %}
    {% else %}
        {% set type = "checkbox" %}
    {% endif %}
    <input disabled class="proposition-input" type="{{ type }}" name="{{ subquestion.id }}[]" id="input-proposition{{ proposition.id }}" value="{{ proposition.id }}" required />
{% endmacro %}

{% macro isRightAnswer(proposition) %}
    {% if proposition.rightAnswer == true %}
        <button type="button" class="btn btn-success btn-xs make-it-right-or-wrong vertical-middle" data-proposition-id="{{ proposition.id }}" data-toggle="tooltip" data-original-title="{{ 'editor.proposition.make_it_wrong' | trans }}">
            {{ 'editor.proposition.right' | trans }}
        </button>
    {% else %}
        <button type="button" class="btn btn-danger btn-xs make-it-right-or-wrong vertical-middle" data-proposition-id="{{ proposition.id }}" data-toggle="tooltip" data-original-title="{{ 'editor.proposition.make_it_right' | trans }}">
            {{ 'editor.proposition.wrong' | trans }}
        </button>
    {% endif %}
{% endmacro %}

{% macro deleteProposition(proposition) %}
    <button class="btn btn-default btn-xs delete-proposition vertical-middle" data-subquestion-id="{{ proposition.subquestion.id }}" data-proposition-id="{{ proposition.id }}" data-toggle="tooltip" data-original-title="{{ 'editor.proposition.remove' | trans }}">
        <span class="glyphicon glyphicon-remove "></span>
    </button>
{% endmacro %}

{% macro editMedia(media, where) %}
    <button class="btn btn-default btn-xs edit-media vertical-middle"  data-entity-reloaded="{{ where }}" data-media-type="{{ media.mediaType.name }}" data-media-id="{{ media.id }}" data-toggle="tooltip" data-original-title="Editer le mÃ©dia">
        <span class="glyphicon glyphicon-pencil"></span>
    </button>
{% endmacro %}

{% macro deleteAmorce(subquestion) %}
    <button rel="tooltip" data-original-title="{{ 'editor.subquestion.remove_instruction' | trans }}" class="btn btn-default btn-xs delete-amorce vertical-middle" data-subquestion-id="{{ subquestion.id }}">
        <span class="glyphicon glyphicon-remove"></span>
    </button>
{% endmacro %}

{% macro deleteInstruction() %}
    <button rel="tooltip" data-original-title="{{ 'editor.subquestion.remove_instruction' | trans }}" class="btn btn-default btn-xs delete-instruction vertical-middle">
        <span class="glyphicon glyphicon-remove"></span>
    </button>
{% endmacro %}

{% macro listeningLimit(questionnaire, media) %}
    {% set limit = 0 %}
    {% for limits in media.mediaLimits %}
        {% if limits.questionnaire == questionnaire %}
        {% set limit = limits.listeningLimit %}
        {% endif %}
    {% endfor %}
     <input size="2" style="color:black;" value="{{ limit }}" class="media-listening-limit vertical-middle" data-media-id="{{ media.id }}" type="number" min="0" step="1" pattern='[0-9]{1,3}' data-toggle="tooltip" data-original-title="{{ 'editor.media.listening_limit' | trans }}" />
{% endmacro %}

{% macro displayRightAnswerAPP(questionnaire, subquestion) %}
    {% import "InnovaSelfBundle:Editor:common/macros.html.twig" as macros %}
    {% set HasAnAnswer = false %}
    {% for proposition in subquestion.propositions %}
        {% if proposition.rightAnswer == true %}
            {% set HasAnAnswer = true %}
            {{ macros.displayMedia(questionnaire, proposition.media) }}
        {% endif %}
    {% endfor %}

    {% if HasAnAnswer == false %}
        <span class="btn btn-default btn-xs app-add-answer vertical-middle" data-subquestion-id="{{ subquestion.id }}">{{ 'editor.app.add_answer' | trans }}</span>
    {% endif %}
{% endmacro %}

{% macro displayDistractor(questionnaire) %}
    {% import "InnovaSelfBundle:Editor:common/macros.html.twig" as macros %}
    {% set subquestions = questionnaire.questions[0].subquestions %}
    {% set propositions = questionnaire.questions[0].subquestions[0].propositions %}
    {% for proposition in propositions %}
        {% set mediaCurrent =  proposition.media %}
        {% set found = false %}
        {% for subquestion in subquestions %}
            {% for propositionOther in subquestion.propositions if found == false %}
                {% if (propositionOther.media == mediaCurrent) and (propositionOther.rightAnswer == true) %}
                    {% set found = true %}
                {% else %}
                {% endif %}
            {% endfor %}
        {% endfor %}
        {% if found == false %}
            <tr>
                <td>
                    <span class="app-delete-distractor glyphicon glyphicon-remove btn btn-default btn-sm vertical-middle pull-right" data-proposition-id="{{ proposition.id }}" data-toggle="tooltip" data-original-title="{{ 'editor.app.remove_distractor' | trans }}" title=""></span>
                </td>
                <td>
                    {{ macros.displayMedia(questionnaire, proposition.media) }}
                </td>
            </tr>
        {% endif %}
    {% endfor %}
{% endmacro %}
